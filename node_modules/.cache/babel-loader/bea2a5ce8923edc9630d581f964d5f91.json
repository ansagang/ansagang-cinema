{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0441\\u0430\\u0440\\\\Documents\\\\react\\\\ansa-app\\\\src\\\\Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movie() {\n  _s();\n\n  const link = 'https://image.tmdb.org/t/p/original';\n\n  const setVoteClass = vote => {\n    if (vote >= 8) {\n      return \"green\";\n    } else if (vote >= 5) {\n      return \"orange\";\n    } else {\n      return \"red\";\n    }\n  };\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    fetch('https://api.themoviedb.org/3/movie/ ' + id + '?api_key=9122d3e99f5cf10f65b111a1dcd51b20&language=ru-RU').then(res => res.json()).then(data => {\n      setMovie(data);\n    });\n  }, []);\n  if (!movie) return null;\n  const genreList = movie.genres.map((g, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-genre-list\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          className: \"movie-genre-name\",\n          children: g.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"movie-backdrop\",\n      src: link + movie.backdrop_path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-pictures\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"movie-poster\",\n          src: link + movie.poster_path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `movie-vote-average ${setVoteClass(movie.vote_average)}`,\n          children: movie.vote_average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-original-title\",\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"movie-original-tagline\",\n          children: movie.tagline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-release-date\",\n          children: movie.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-budget\",\n          children: `${movie.budget}$`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-genre\",\n          children: movie.genres && genreList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-overview\",\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-original-lang\",\n          children: `Оригинальный язык: ${movie.original_language}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-popularity\",\n          children: `Популярность: ${movie.popularity}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movie, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Ансар/Documents/react/ansa-app/src/Movie.jsx"],"names":["useEffect","useState","Link","useParams","Movie","link","setVoteClass","vote","id","movie","setMovie","fetch","then","res","json","data","genreList","genres","map","g","i","name","backdrop_path","poster_path","vote_average","title","original_title","tagline","release_date","budget","overview","original_language","popularity"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nfunction Movie() {\r\n    const link = 'https://image.tmdb.org/t/p/original'\r\n    const setVoteClass = (vote) => {\r\n        if (vote >= 8) {\r\n            return \"green\";\r\n        } else if (vote >= 5) {\r\n            return \"orange\";\r\n        } else {\r\n            return \"red\";\r\n        }\r\n    }\r\n\r\n    const { id } = useParams()\r\n\r\n    const [movie, setMovie] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/movie/ ' + id + '?api_key=9122d3e99f5cf10f65b111a1dcd51b20&language=ru-RU')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setMovie(data)\r\n            })\r\n    }, [])\r\n\r\n    if (!movie) return null\r\n\r\n    const genreList = movie.genres.map((g, i) => {\r\n        return (\r\n            <>\r\n                <li className=\"movie-genre-list\" key={i}>\r\n                    <a href=\"\" className=\"movie-genre-name\">\r\n                        {g.name}\r\n                    </a>\r\n                </li>\r\n            </>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"movie\">\r\n            <img className=\"movie-backdrop\" src={link + movie.backdrop_path} />\r\n            <div className=\"movie-left\">\r\n                <div className=\"movie-pictures\">\r\n                    <img className=\"movie-poster\" src={link + movie.poster_path} />\r\n                    <span className={`movie-vote-average ${setVoteClass(movie.vote_average)}`}>{movie.vote_average}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"movie-right\">\r\n                <div className=\"movie-info\">\r\n                    <h1 className=\"movie-title\">{movie.title}</h1>\r\n                    <h1 className=\"movie-original-title\">{movie.original_title}</h1>\r\n                    <h3 className=\"movie-original-tagline\">{movie.tagline}</h3>\r\n                    <p className=\"movie-release-date\">{movie.release_date}</p>\r\n                    <p className=\"movie-budget\">{`${movie.budget}$`}</p>\r\n                    <p className=\"movie-genre\">{movie.genres && genreList}</p>\r\n                    <p className=\"movie-overview\">{movie.overview}</p>\r\n                    <p className=\"movie-original-lang\">{`Оригинальный язык: ${movie.original_language}`}</p>\r\n                    <p className=\"movie-popularity\">{`Популярность: ${movie.popularity}`}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}