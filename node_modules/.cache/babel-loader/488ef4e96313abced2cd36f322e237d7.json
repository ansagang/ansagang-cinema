{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0441\\u0430\\u0440\\\\Documents\\\\react\\\\ansa-app\\\\src\\\\comp\\\\movie-comp\\\\SearchedMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport MovieCard from './MovieCard';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchedMovie() {\n  _s();\n\n  const {\n    q\n  } = useParams();\n  const [searchedmovies, setSearchedMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const history = useHistory();\n  let currentPage = 1;\n  let totalResults = data.total_results;\n  useEffect(() => {\n    if (q) {\n      fetch('https://api.themoviedb.org/3/search/movie?api_key=9122d3e99f5cf10f65b111a1dcd51b20&language=ru-RU&query=' + q + '').then(res => res.json()).then(data => {\n        setSearchedMovies(data.results);\n      }).then(data => {\n        setSearchedMovies({\n          totalResults: data.total_results\n        });\n      });\n    }\n  }, [q]);\n  console.log(totalResults);\n\n  function handleOnSubmit() {\n    history.push('/search/' + searchTerm);\n  }\n\n  let nextPage = pageNumber => {\n    if (q) {\n      fetch('https://api.themoviedb.org/3/search/movie?api_key=9122d3e99f5cf10f65b111a1dcd51b20&language=ru-RU&query=' + q + '&page=' + pageNumber + '').then(res => res.json()).then(data => {\n        setSearchedMovies(data.results, {\n          currentPage: pageNumber\n        });\n      });\n    }\n  };\n\n  const numberPages = Math.floor(totalResults / 20);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        className: \"search-bar-form\",\n        action: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Search a Movie\",\n          value: searchTerm,\n          className: \"search-bar-input\",\n          type: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searched-movies-list\",\n      children: searchedmovies.map(item => /*#__PURE__*/_jsxDEV(MovieCard, {\n        data: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), totalResults > 20 ? /*#__PURE__*/_jsxDEV(Pagination, {\n      pages: numberPages,\n      nextPage: this.nextPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s(SearchedMovie, \"33XkLvhxNlvv5/LuH0CmXKsDHN4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = SearchedMovie;\nexport default SearchedMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchedMovie\");","map":{"version":3,"sources":["C:/Users/Ансар/Documents/react/ansa-app/src/comp/movie-comp/SearchedMovie.jsx"],"names":["useState","useEffect","useHistory","useParams","MovieCard","Pagination","SearchedMovie","q","searchedmovies","setSearchedMovies","searchTerm","setSearchTerm","history","currentPage","totalResults","data","total_results","fetch","then","res","json","results","console","log","handleOnSubmit","push","nextPage","pageNumber","numberPages","Math","floor","e","target","value","map","item"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,SAAS,EAAvB;AAEA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMY,OAAO,GAAGV,UAAU,EAA1B;AAEA,MAAIW,WAAW,GAAG,CAAlB;AACC,MAAIC,YAAY,GAAGC,IAAI,CAACC,aAAxB;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,CAAJ,EAAO;AACHU,MAAAA,KAAK,CAAC,6GAA6GV,CAA7G,GAAiH,EAAlH,CAAL,CACKW,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUH,IAAI,IAAI;AACVN,QAAAA,iBAAiB,CAACM,IAAI,CAACM,OAAN,CAAjB;AACH,OAJL,EAKKH,IALL,CAKUH,IAAI,IAAI;AACVN,QAAAA,iBAAiB,CAAC;AAACK,UAAAA,YAAY,EAAEC,IAAI,CAACC;AAApB,SAAD,CAAjB;AACH,OAPL;AAQH;AACJ,GAXQ,EAWN,CAACT,CAAD,CAXM,CAAT;AAaAe,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;;AAEA,WAASU,cAAT,GAA0B;AACtBZ,IAAAA,OAAO,CAACa,IAAR,CAAa,aAAaf,UAA1B;AACH;;AAED,MAAIgB,QAAQ,GAAIC,UAAD,IAAgB;AAC3B,QAAIpB,CAAJ,EAAO;AACHU,MAAAA,KAAK,CAAC,6GAA6GV,CAA7G,GAAiH,QAAjH,GAA4HoB,UAA5H,GAAyI,EAA1I,CAAL,CACKT,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUH,IAAI,IAAI;AACVN,QAAAA,iBAAiB,CAACM,IAAI,CAACM,OAAN,EAAe;AAACR,UAAAA,WAAW,EAAEc;AAAd,SAAf,CAAjB;AACH,OAJL;AAKH;AACJ,GARD;;AAUA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWhB,YAAY,GAAG,EAA1B,CAApB;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEU,cAAhB;AAAgC,QAAA,SAAS,EAAC,iBAA1C;AAA4D,QAAA,MAAM,EAAC,EAAnE;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAEO,CAAC,IAAIpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;AAAqD,UAAA,WAAW,EAAC,gBAAjE;AAAkF,UAAA,KAAK,EAAEvB,UAAzF;AAAqG,UAAA,SAAS,EAAC,kBAA/G;AAAkI,UAAA,IAAI,EAAC;AAAvI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBAEQF,cAAc,CAAC0B,GAAf,CAAmBC,IAAI,iBACnB,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YANJ,EAcQrB,YAAY,GAAG,EAAf,gBAAoB,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEc,WAAnB;AAAgC,MAAA,QAAQ,EAAE,KAAKF,QAA/C;AAAyD,MAAA,WAAW,EAAEb;AAAtE;AAAA;AAAA;AAAA;AAAA,YAApB,GAA4G,EAdpH;AAAA,kBADJ;AAmBH;;GA5DQP,a;UACSH,S,EAIED,U;;;KALXI,a;AA8DT,eAAeA,aAAf","sourcesContent":["import { useState, useEffect, } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport MovieCard from './MovieCard'\r\nimport Pagination from './Pagination'\r\n\r\nfunction SearchedMovie() {\r\n    const { q } = useParams()\r\n\r\n    const [searchedmovies, setSearchedMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const history = useHistory()\r\n\r\n    let currentPage = 1\r\n     let totalResults = data.total_results\r\n\r\n    useEffect(() => {\r\n        if (q) {\r\n            fetch('https://api.themoviedb.org/3/search/movie?api_key=9122d3e99f5cf10f65b111a1dcd51b20&language=ru-RU&query=' + q + '')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setSearchedMovies(data.results)\r\n                })\r\n                .then(data => {\r\n                    setSearchedMovies({totalResults: data.total_results})\r\n                })\r\n        }\r\n    }, [q])\r\n\r\n    console.log(totalResults);\r\n\r\n    function handleOnSubmit() {\r\n        history.push('/search/' + searchTerm)\r\n    }\r\n\r\n    let nextPage = (pageNumber) => {\r\n        if (q) {\r\n            fetch('https://api.themoviedb.org/3/search/movie?api_key=9122d3e99f5cf10f65b111a1dcd51b20&language=ru-RU&query=' + q + '&page=' + pageNumber + '')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setSearchedMovies(data.results, {currentPage: pageNumber})\r\n                })\r\n        }\r\n    }\r\n\r\n    const numberPages = Math.floor(totalResults / 20);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-bar\">\r\n                <form onSubmit={handleOnSubmit} className=\"search-bar-form\" action=\"\">\r\n                    <input onChange={e => setSearchTerm(e.target.value)} placeholder=\"Search a Movie\" value={searchTerm} className=\"search-bar-input\" type=\"search\" />\r\n                </form>\r\n            </div>\r\n            <div className=\"searched-movies-list\">\r\n                {\r\n                    searchedmovies.map(item => (\r\n                        <MovieCard data={item} />\r\n                    ))\r\n                }\r\n            </div>\r\n            {\r\n                totalResults > 20 ? <Pagination pages={numberPages} nextPage={this.nextPage} currentPage={currentPage} /> : ''\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchedMovie;"]},"metadata":{},"sourceType":"module"}